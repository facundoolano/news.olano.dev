// DO NOT EDIT: Code generated by matcha from home.matcha

import gleam/string_tree.{type StringTree}
import gleam/list

import feed.{type Entry}

pub fn render_tree(entries entries: List(Entry)) -> StringTree {
    let tree = string_tree.from_string("")
    let tree = string_tree.append(tree, "<!DOCTYPE html>
<html>
  <head>
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />
    <meta charset=\"utf-8\" />
    <title>news.olano.dev</title>
    <link
      type=\"application/atom+xml\"
      rel=\"alternate\"
      href=\"/feed\"
      title=\"news.olano.dev\"
    />
  </head>
  <body>
    <h1>news.olano.dev</h1>
    <ol>
      ")
    let tree = list.fold(entries, tree, fn(tree, entry) {
            let tree = string_tree.append(tree, "
      <li>
          <a href=\"")
    let tree = string_tree.append(tree, entry.url)
    let tree = string_tree.append(tree, "\" target=\"_blank\">")
    let tree = string_tree.append(tree, entry.title)
    let tree = string_tree.append(tree, "</a>
          <small>")
    let tree = string_tree.append(tree, feed.domain(entry))
    let tree = string_tree.append(tree, " ")
    let tree = string_tree.append(tree, feed.time_ago(entry))
    let tree = string_tree.append(tree, "</small>
      </li>
      ")

        tree
})
    let tree = string_tree.append(tree, "
    </ol>
    <p>built with <a href=\"https://gleam.run/\">Gleam</a></p>
    <p>
      <a href=\"https://github.com/facundoolano/news.olano.dev/\">source code</a>
    </p>
  </body>
</html>
")

    tree
}

pub fn render(entries entries: List(Entry)) -> String {
    string_tree.to_string(render_tree(entries: entries))
}

